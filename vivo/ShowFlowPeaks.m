function ShowFlowPeaks(A, ROIpositions, slice, detaT, FiberCup, d, value)

if nargin == 6
    value = 0.5;
end

if size(A,2) == 4
    f = @(p) (A*[p(1), p(2), p(3), 1]')';
elseif size(A,2) == 6
    f = @(p) (A*[p(1)^2, p(2)^2, p(1)*p(2), p(1), p(2), 1]')';
elseif size(A,2) == 10 && ~FiberCup
    f = @(p) (A*[p(1)^2, p(2)^2, p(3)^2, p(1)*p(2), p(1)*p(3), p(2)*p(3), p(1), p(2), p(3), 1]')';
elseif size(A,2) == 10 && FiberCup
    f = @(p) (A*[p(1)^3, p(2)^3, (p(1)^2)*p(2), p(1)*(p(2)^2), p(1)^2, p(2)^2, p(1)*p(2), p(1), p(2), 1]')';
elseif size(A,2) == 15
    f = @(p) (A*[p(1)^4, p(2)^4, (p(1)^3)*p(2), p(1)*(p(2)^3), (p(1)^2)*(p(2)^2), p(1)^3, p(2)^3, (p(1)^2)*p(2), p(1)*(p(2)^2), p(1)^2, p(2)^2, p(1)*p(2), p(1), p(2), 1]')';  
elseif size(A,2) == 20
    f = @(p) (A*[p(1)^3, p(2)^3, p(3)^3, (p(1)^2)*p(2), (p(1)^2)*p(3), (p(2)^2)*p(1), (p(2)^2)*p(3), (p(3)^2)*p(1), (p(3)^2)*p(2), p(1)*p(2)*p(3), ...
                p(1)^2, p(2)^2, p(3)^2, p(1)*p(2), p(1)*p(3), p(2)*p(3), p(1), p(2), p(3), 1]')';
elseif size(A,2) == 35
    f = @(p) (A*[p(1)^4, p(2)^4, p(3)^4, (p(1)^3)*p(2), (p(1)^3)*p(3), (p(2)^3)*p(1), (p(2)^3)*p(3), (p(3)^3)*p(1), (p(3)^3)*p(2), (p(1)^2)*(p(2)^2), (p(1)^2)*(p(3)^2), (p(2)^2)*(p(3)^2), (p(1)^2)*p(2)*p(3), (p(2)^2)*p(1)*p(3), (p(3)^2)*p(1)*p(2), ...
                p(1)^3, p(2)^3, p(3)^3, (p(1)^2)*p(2), (p(1)^2)*p(3), (p(2)^2)*p(1), (p(2)^2)*p(3), (p(3)^2)*p(1), (p(3)^2)*p(2), p(1)*p(2)*p(3), ...
                p(1)^2, p(2)^2, p(3)^2, p(1)*p(2), p(1)*p(3), p(2)*p(3), ...
                p(1), p(2), p(3), 1]')';
elseif size(A,2) == 56
    f = @(p) (A*[p(1)^5, p(2)^5, p(3)^5, (p(1)^4)*p(2), (p(1)^4)*p(3), (p(2)^4)*p(1), (p(2)^4)*p(3), (p(3)^4)*p(1), (p(3)^4)*p(2), (p(1)^3)*(p(2)^2), (p(1)^3)*(p(3)^2), (p(2)^3)*(p(1)^2), (p(2)^3)*(p(3)^2), (p(3)^3)*(p(1)^2), (p(3)^3)*(p(2)^2), (p(1)^3)*p(2)*p(3), (p(2)^3)*p(1)*p(3), (p(3)^3)*p(1)*p(2), (p(1)^2)*(p(2)^2)*p(3), (p(1)^2)*p(2)*(p(3)^2), p(1)*(p(2)^2)*(p(3)^2), ...
                p(1)^4, p(2)^4, p(3)^4, (p(1)^3)*p(2), (p(1)^3)*p(3), (p(2)^3)*p(1), (p(2)^3)*p(3), (p(3)^3)*p(1), (p(3)^3)*p(2), (p(1)^2)*(p(2)^2), (p(1)^2)*(p(3)^2), (p(2)^2)*(p(3)^2), (p(1)^2)*p(2)*p(3), (p(2)^2)*p(1)*p(3), (p(3)^2)*p(1)*p(2), ...
                p(1)^3, p(2)^3, p(3)^3, (p(1)^2)*p(2), (p(1)^2)*p(3), (p(2)^2)*p(1), (p(2)^2)*p(3), (p(3)^2)*p(1), (p(3)^2)*p(2), p(1)*p(2)*p(3), ...
                p(1)^2, p(2)^2, p(3)^2, p(1)*p(2), p(1)*p(3), p(2)*p(3), ...
                p(1), p(2), p(3), 1]')';
elseif size(A,2) == 84
    f = @(p) (A*[p(1), p(1)^2, p(1)^3, p(1)^4, p(1)^5, p(1)^6, p(2), p(1)*p(2), p(1)^2*p(2), p(1)^3*p(2), p(1)^4*p(2), p(1)^5*p(2), ...
                p(2)^2, p(1)*p(2)^2, p(1)^2*p(2)^2, p(1)^3*p(2)^2, p(1)^4*p(2)^2, p(2)^3, p(1)*p(2)^3, p(1)^2*p(2)^3, p(1)^3*p(2)^3, ...
                p(2)^4, p(1)*p(2)^4, p(1)^2*p(2)^4, p(2)^5, p(1)*p(2)^5, p(2)^6, p(3), p(1)*p(3), p(1)^2*p(3), p(1)^3*p(3), p(1)^4*p(3), p(1)^5*p(3), ...
                p(2)*p(3), p(1)*p(2)*p(3), p(1)^2*p(2)*p(3), p(1)^3*p(2)*p(3), p(1)^4*p(2)*p(3), p(2)^2*p(3), p(1)*p(2)^2*p(3), p(1)^2*p(2)^2*p(3), p(1)^3*p(2)^2*p(3), ...
                p(2)^3*p(3), p(1)*p(2)^3*p(3), p(1)^2*p(2)^3*p(3), p(2)^4*p(3), p(1)*p(2)^4*p(3), p(2)^5*p(3), p(3)^2, p(1)*p(3)^2, p(1)^2*p(3)^2, p(1)^3*p(3)^2, ...
                p(1)^4*p(3)^2, p(2)*p(3)^2, p(1)*p(2)*p(3)^2, p(1)^2*p(2)*p(3)^2, p(1)^3*p(2)*p(3)^2, p(2)^2*p(3)^2, p(1)*p(2)^2*p(3)^2, p(1)^2*p(2)^2*p(3)^2, ...
                p(2)^3*p(3)^2, p(1)*p(2)^3*p(3)^2, p(2)^4*p(3)^2, p(3)^3, p(1)*p(3)^3, p(1)^2*p(3)^3, p(1)^3*p(3)^3, p(2)*p(3)^3, p(1)*p(2)*p(3)^3, p(1)^2*p(2)*p(3)^3, ...
                p(2)^2*p(3)^3, p(1)*p(2)^2*p(3)^3, p(2)^3*p(3)^3,p(3)^4, p(1)*p(3)^4, p(1)^2*p(3)^4, p(2)*p(3)^4, p(1)*p(2)*p(3)^4, p(2)^2*p(3)^4, p(3)^5, p(1)*p(3)^5, p(2)*p(3)^5, p(3)^6, 1]')';
elseif size(A,2) == 120
    f = @(p) (A*[p(1), p(1)^2, p(1)^3, p(1)^4, p(1)^5, p(1)^6, p(1)^7, p(2), p(1)*p(2), p(1)^2*p(2), p(1)^3*p(2), p(1)^4*p(2), p(1)^5*p(2), p(1)^6*p(2), p(2)^2, p(1)*p(2)^2, ...
                p(1)^2*p(2)^2, p(1)^3*p(2)^2, p(1)^4*p(2)^2, p(1)^5*p(2)^2, p(2)^3, p(1)*p(2)^3, p(1)^2*p(2)^3, p(1)^3*p(2)^3, p(1)^4*p(2)^3, p(2)^4, p(1)*p(2)^4, p(1)^2*p(2)^4, ...
                p(1)^3*p(2)^4, p(2)^5, p(1)*p(2)^5, p(1)^2*p(2)^5, p(2)^6, p(1)*p(2)^6, p(2)^7, p(3), p(1)*p(3), p(1)^2*p(3), p(1)^3*p(3), p(1)^4*p(3), p(1)^5*p(3), p(1)^6*p(3), p(2)*p(3), ...
                p(1)*p(2)*p(3), p(1)^2*p(2)*p(3), p(1)^3*p(2)*p(3), p(1)^4*p(2)*p(3), p(1)^5*p(2)*p(3), p(2)^2*p(3), p(1)*p(2)^2*p(3), p(1)^2*p(2)^2*p(3), p(1)^3*p(2)^2*p(3), p(1)^4*p(2)^2*p(3), ...
                p(2)^3*p(3), p(1)*p(2)^3*p(3), p(1)^2*p(2)^3*p(3), p(1)^3*p(2)^3*p(3), p(2)^4*p(3), p(1)*p(2)^4*p(3), p(1)^2*p(2)^4*p(3), p(2)^5*p(3), p(1)*p(2)^5*p(3), p(2)^6*p(3), p(3)^2, ...
                p(1)*p(3)^2, p(1)^2*p(3)^2, p(1)^3*p(3)^2, p(1)^4*p(3)^2, p(1)^5*p(3)^2, p(2)*p(3)^2, p(1)*p(2)*p(3)^2, p(1)^2*p(2)*p(3)^2, p(1)^3*p(2)*p(3)^2, p(1)^4*p(2)*p(3)^2, ...
                p(2)^2*p(3)^2, p(1)*p(2)^2*p(3)^2, p(1)^2*p(2)^2*p(3)^2, p(1)^3*p(2)^2*p(3)^2, p(2)^3*p(3)^2, p(1)*p(2)^3*p(3)^2, p(1)^2*p(2)^3*p(3)^2, p(2)^4*p(3)^2, p(1)*p(2)^4*p(3)^2, ...
                p(2)^5*p(3)^2, p(3)^3, p(1)*p(3)^3, p(1)^2*p(3)^3, p(1)^3*p(3)^3, p(1)^4*p(3)^3, p(2)*p(3)^3, p(1)*p(2)*p(3)^3, p(1)^2*p(2)*p(3)^3, p(1)^3*p(2)*p(3)^3, p(2)^2*p(3)^3, ...
                p(1)*p(2)^2*p(3)^3, p(1)^2*p(2)^2*p(3)^3, p(2)^3*p(3)^3, p(1)*p(2)^3*p(3)^3, p(2)^4*p(3)^3, p(3)^4, p(1)*p(3)^4, p(1)^2*p(3)^4, p(1)^3*p(3)^4, p(2)*p(3)^4, p(1)*p(2)*p(3)^4, ...
                p(1)^2*p(2)*p(3)^4, p(2)^2*p(3)^4, p(1)*p(2)^2*p(3)^4, p(2)^3*p(3)^4, p(3)^5, p(1)*p(3)^5, p(1)^2*p(3)^5, p(2)*p(3)^5, p(1)*p(2)*p(3)^5, p(2)^2*p(3)^5, p(3)^6, p(1)*p(3)^6, ...
                p(2)*p(3)^6, p(3)^7, 1]')';
elseif size(A,2) == 165
    f = @(p) (A*[p(1), p(1)^2, p(1)^3, p(1)^4, p(1)^5, p(1)^6, p(1)^7, p(1)^8, p(2), p(1)*p(2), p(1)^2*p(2), p(1)^3*p(2), p(1)^4*p(2), p(1)^5*p(2), p(1)^6*p(2), p(1)^7*p(2), ...
                p(2)^2, p(1)*p(2)^2, p(1)^2*p(2)^2, p(1)^3*p(2)^2, p(1)^4*p(2)^2, p(1)^5*p(2)^2, p(1)^6*p(2)^2, p(2)^3, p(1)*p(2)^3, p(1)^2*p(2)^3, p(1)^3*p(2)^3, p(1)^4*p(2)^3, ...
                p(1)^5*p(2)^3, p(2)^4, p(1)*p(2)^4, p(1)^2*p(2)^4, p(1)^3*p(2)^4, p(1)^4*p(2)^4, p(2)^5, p(1)*p(2)^5, p(1)^2*p(2)^5, p(1)^3*p(2)^5, p(2)^6, p(1)*p(2)^6, p(1)^2*p(2)^6, ...
                p(2)^7, p(1)*p(2)^7, p(2)^8, p(3), p(1)*p(3), p(1)^2*p(3), p(1)^3*p(3), p(1)^4*p(3), p(1)^5*p(3), p(1)^6*p(3), p(1)^7*p(3), p(2)*p(3), p(1)*p(2)*p(3), p(1)^2*p(2)*p(3), ...
                p(1)^3*p(2)*p(3), p(1)^4*p(2)*p(3), p(1)^5*p(2)*p(3), p(1)^6*p(2)*p(3), p(2)^2*p(3), p(1)*p(2)^2*p(3), p(1)^2*p(2)^2*p(3), p(1)^3*p(2)^2*p(3), p(1)^4*p(2)^2*p(3), p(1)^5*p(2)^2*p(3), ...
                p(2)^3*p(3), p(1)*p(2)^3*p(3), p(1)^2*p(2)^3*p(3), p(1)^3*p(2)^3*p(3), p(1)^4*p(2)^3*p(3), p(2)^4*p(3), p(1)*p(2)^4*p(3), p(1)^2*p(2)^4*p(3), p(1)^3*p(2)^4*p(3), p(2)^5*p(3), ...
                p(1)*p(2)^5*p(3), p(1)^2*p(2)^5*p(3), p(2)^6*p(3), p(1)*p(2)^6*p(3), p(2)^7*p(3), p(3)^2, p(1)*p(3)^2, p(1)^2*p(3)^2, p(1)^3*p(3)^2, p(1)^4*p(3)^2, p(1)^5*p(3)^2, p(1)^6*p(3)^2, ...
                p(2)*p(3)^2, p(1)*p(2)*p(3)^2, p(1)^2*p(2)*p(3)^2, p(1)^3*p(2)*p(3)^2, p(1)^4*p(2)*p(3)^2, p(1)^5*p(2)*p(3)^2, p(2)^2*p(3)^2, p(1)*p(2)^2*p(3)^2, p(1)^2*p(2)^2*p(3)^2, ...
                p(1)^3*p(2)^2*p(3)^2, p(1)^4*p(2)^2*p(3)^2, p(2)^3*p(3)^2, p(1)*p(2)^3*p(3)^2, p(1)^2*p(2)^3*p(3)^2, p(1)^3*p(2)^3*p(3)^2, p(2)^4*p(3)^2, p(1)*p(2)^4*p(3)^2, ...
                p(1)^2*p(2)^4*p(3)^2, p(2)^5*p(3)^2, p(1)*p(2)^5*p(3)^2, p(2)^6*p(3)^2, p(3)^3, p(1)*p(3)^3, p(1)^2*p(3)^3, p(1)^3*p(3)^3, p(1)^4*p(3)^3, p(1)^5*p(3)^3, p(2)*p(3)^3, ...
                p(1)*p(2)*p(3)^3, p(1)^2*p(2)*p(3)^3, p(1)^3*p(2)*p(3)^3, p(1)^4*p(2)*p(3)^3, p(2)^2*p(3)^3, p(1)*p(2)^2*p(3)^3, p(1)^2*p(2)^2*p(3)^3, p(1)^3*p(2)^2*p(3)^3, p(2)^3*p(3)^3, ...
                p(1)*p(2)^3*p(3)^3, p(1)^2*p(2)^3*p(3)^3, p(2)^4*p(3)^3, p(1)*p(2)^4*p(3)^3, p(2)^5*p(3)^3, p(3)^4, p(1)*p(3)^4, p(1)^2*p(3)^4, p(1)^3*p(3)^4, p(1)^4*p(3)^4, p(2)*p(3)^4, ...
                p(1)*p(2)*p(3)^4, p(1)^2*p(2)*p(3)^4, p(1)^3*p(2)*p(3)^4, p(2)^2*p(3)^4, p(1)*p(2)^2*p(3)^4, p(1)^2*p(2)^2*p(3)^4, p(2)^3*p(3)^4, p(1)*p(2)^3*p(3)^4, p(2)^4*p(3)^4, p(3)^5, ...
                p(1)*p(3)^5, p(1)^2*p(3)^5, p(1)^3*p(3)^5, p(2)*p(3)^5, p(1)*p(2)*p(3)^5, p(1)^2*p(2)*p(3)^5, p(2)^2*p(3)^5, p(1)*p(2)^2*p(3)^5, p(2)^3*p(3)^5, p(3)^6, p(1)*p(3)^6, ...
                p(1)^2*p(3)^6, p(2)*p(3)^6, p(1)*p(2)*p(3)^6, p(2)^2*p(3)^6, p(3)^7, p(1)*p(3)^7, p(2)*p(3)^7, p(3)^8, 1]')';
elseif size(A,2) == 286
    f = @(p) (A*[p(1), p(1)^2, p(1)^3, p(1)^4, p(1)^5, p(1)^6, p(1)^7, p(1)^8, p(1)^9, p(1)^10, p(2), p(1)*p(2), p(1)^2*p(2), p(1)^3*p(2), ...
                p(1)^4*p(2), p(1)^5*p(2), p(1)^6*p(2), p(1)^7*p(2), p(1)^8*p(2), p(1)^9*p(2), p(2)^2, p(1)*p(2)^2, p(1)^2*p(2)^2, p(1)^3*p(2)^2, ...
                p(1)^4*p(2)^2, p(1)^5*p(2)^2, p(1)^6*p(2)^2, p(1)^7*p(2)^2, p(1)^8*p(2)^2, p(2)^3, p(1)*p(2)^3, p(1)^2*p(2)^3, p(1)^3*p(2)^3, ...
                p(1)^4*p(2)^3, p(1)^5*p(2)^3, p(1)^6*p(2)^3, p(1)^7*p(2)^3, p(2)^4, p(1)*p(2)^4, p(1)^2*p(2)^4, p(1)^3*p(2)^4, p(1)^4*p(2)^4, ...
                p(1)^5*p(2)^4, p(1)^6*p(2)^4, p(2)^5, p(1)*p(2)^5, p(1)^2*p(2)^5, p(1)^3*p(2)^5, p(1)^4*p(2)^5, p(1)^5*p(2)^5, p(2)^6, p(1)*p(2)^6, ...
                p(1)^2*p(2)^6, p(1)^3*p(2)^6, p(1)^4*p(2)^6, p(2)^7, p(1)*p(2)^7, p(1)^2*p(2)^7, p(1)^3*p(2)^7, p(2)^8, p(1)*p(2)^8, p(1)^2*p(2)^8, ...
                p(2)^9, p(1)*p(2)^9, p(2)^10, p(3), p(1)*p(3), p(1)^2*p(3), p(1)^3*p(3), p(1)^4*p(3), p(1)^5*p(3), p(1)^6*p(3), p(1)^7*p(3), ...
                p(1)^8*p(3), p(1)^9*p(3), p(2)*p(3), p(1)*p(2)*p(3), p(1)^2*p(2)*p(3), p(1)^3*p(2)*p(3), p(1)^4*p(2)*p(3), p(1)^5*p(2)*p(3), ...
                p(1)^6*p(2)*p(3), p(1)^7*p(2)*p(3), p(1)^8*p(2)*p(3), p(2)^2*p(3), p(1)*p(2)^2*p(3), p(1)^2*p(2)^2*p(3), p(1)^3*p(2)^2*p(3), ...
                p(1)^4*p(2)^2*p(3), p(1)^5*p(2)^2*p(3), p(1)^6*p(2)^2*p(3), p(1)^7*p(2)^2*p(3), p(2)^3*p(3), p(1)*p(2)^3*p(3), p(1)^2*p(2)^3*p(3), ...
                p(1)^3*p(2)^3*p(3), p(1)^4*p(2)^3*p(3), p(1)^5*p(2)^3*p(3), p(1)^6*p(2)^3*p(3), p(2)^4*p(3), p(1)*p(2)^4*p(3), p(1)^2*p(2)^4*p(3), ...
                p(1)^3*p(2)^4*p(3), p(1)^4*p(2)^4*p(3), p(1)^5*p(2)^4*p(3), p(2)^5*p(3), p(1)*p(2)^5*p(3), p(1)^2*p(2)^5*p(3), p(1)^3*p(2)^5*p(3), ...
                p(1)^4*p(2)^5*p(3), p(2)^6*p(3), p(1)*p(2)^6*p(3), p(1)^2*p(2)^6*p(3), p(1)^3*p(2)^6*p(3), p(2)^7*p(3), p(1)*p(2)^7*p(3), ...
                p(1)^2*p(2)^7*p(3), p(2)^8*p(3), p(1)*p(2)^8*p(3), p(2)^9*p(3), p(3)^2, p(1)*p(3)^2, p(1)^2*p(3)^2, p(1)^3*p(3)^2, p(1)^4*p(3)^2, ...
                p(1)^5*p(3)^2, p(1)^6*p(3)^2, p(1)^7*p(3)^2, p(1)^8*p(3)^2, p(2)*p(3)^2, p(1)*p(2)*p(3)^2, p(1)^2*p(2)*p(3)^2, p(1)^3*p(2)*p(3)^2, ...
                p(1)^4*p(2)*p(3)^2, p(1)^5*p(2)*p(3)^2, p(1)^6*p(2)*p(3)^2, p(1)^7*p(2)*p(3)^2, p(2)^2*p(3)^2, p(1)*p(2)^2*p(3)^2, ...
                p(1)^2*p(2)^2*p(3)^2, p(1)^3*p(2)^2*p(3)^2, p(1)^4*p(2)^2*p(3)^2, p(1)^5*p(2)^2*p(3)^2, p(1)^6*p(2)^2*p(3)^2, p(2)^3*p(3)^2, ...
                p(1)*p(2)^3*p(3)^2, p(1)^2*p(2)^3*p(3)^2, p(1)^3*p(2)^3*p(3)^2, p(1)^4*p(2)^3*p(3)^2, p(1)^5*p(2)^3*p(3)^2, p(2)^4*p(3)^2, ...
                p(1)*p(2)^4*p(3)^2, p(1)^2*p(2)^4*p(3)^2, p(1)^3*p(2)^4*p(3)^2, p(1)^4*p(2)^4*p(3)^2, p(2)^5*p(3)^2, p(1)*p(2)^5*p(3)^2, ...
                p(1)^2*p(2)^5*p(3)^2, p(1)^3*p(2)^5*p(3)^2, p(2)^6*p(3)^2, p(1)*p(2)^6*p(3)^2, p(1)^2*p(2)^6*p(3)^2, p(2)^7*p(3)^2, ...
                p(1)*p(2)^7*p(3)^2, p(2)^8*p(3)^2, p(3)^3, p(1)*p(3)^3, p(1)^2*p(3)^3, p(1)^3*p(3)^3, p(1)^4*p(3)^3, p(1)^5*p(3)^3, ...
                p(1)^6*p(3)^3, p(1)^7*p(3)^3, p(2)*p(3)^3, p(1)*p(2)*p(3)^3, p(1)^2*p(2)*p(3)^3, p(1)^3*p(2)*p(3)^3, p(1)^4*p(2)*p(3)^3, ...
                p(1)^5*p(2)*p(3)^3, p(1)^6*p(2)*p(3)^3, p(2)^2*p(3)^3, p(1)*p(2)^2*p(3)^3, p(1)^2*p(2)^2*p(3)^3, p(1)^3*p(2)^2*p(3)^3, ...
                p(1)^4*p(2)^2*p(3)^3, p(1)^5*p(2)^2*p(3)^3, p(2)^3*p(3)^3, p(1)*p(2)^3*p(3)^3, p(1)^2*p(2)^3*p(3)^3, p(1)^3*p(2)^3*p(3)^3, ...
                p(1)^4*p(2)^3*p(3)^3, p(2)^4*p(3)^3, p(1)*p(2)^4*p(3)^3, p(1)^2*p(2)^4*p(3)^3, p(1)^3*p(2)^4*p(3)^3, p(2)^5*p(3)^3, ...
                p(1)*p(2)^5*p(3)^3, p(1)^2*p(2)^5*p(3)^3, p(2)^6*p(3)^3, p(1)*p(2)^6*p(3)^3, p(2)^7*p(3)^3, p(3)^4, p(1)*p(3)^4, p(1)^2*p(3)^4, ...
                p(1)^3*p(3)^4, p(1)^4*p(3)^4, p(1)^5*p(3)^4, p(1)^6*p(3)^4, p(2)*p(3)^4, p(1)*p(2)*p(3)        DirsROI(i,:)
        ROIpositions(i,:)^4, p(1)^2*p(2)*p(3)^4, p(1)^3*p(2)*p(3)^4, ...
                p(1)^4*p(2)*p(3)^4, p(1)^5*p(2)*p(3)^4, p(2)^2*p(3)^4, p(1)*p(2)^2*p(3)^4, p(1)^2*p(2)^2*p(3)^4, p(1)^3*p(2)^2*p(3)^4, ...
                p(1)^4*p(2)^2*p(3)^4, p(2)^3*p(3)^4, p(1)*p(2)^3*p(3)^4, p(1)^2*p(2)^3*p(3)^4, p(1)^3*p(2)^3*p(3)^4, p(2)^4*p(3)^4, ...
                p(1)*p(2)^4*p(3)^4, p(1)^2*p(2)^4*p(3)^4, p(2)^5*p(3)^4, p(1)*p(2)^5*p(3)^4, p(2)^6*p(3)^4, p(3)^5, p(1)*p(3)^5, p(1)^2*p(3)^5, ...
                p(1)^3*p(3)^5, p(1)^4*p(3)^5, p(1)^5*p(3)^5, p(2)*p(3)^5, p(1)*p(2)*p(3)^5, p(1)^2*p(2)*p(3)^5, p(1)^3*p(2)*p(3)^5, ...
                p(1)^4*p(2)*p(3)^5, p(2)^2*p(3)^5, p(1)*p(2)^2*p(3)^5, p(1)^2*p(2)^2*p(3)^5, p(1)^3*p(2)^2*p(3)^5, p(2)^3*p(3)^5, ...
                p(1)*p(2)^3*p(3)^5, p(1)^2*p(2)^3*p(3)^5, p(2)^4*p(3)^5, p(1)*p(2)^4*p(3)^5, p(2)^5*p(3)^5, p(3)^6, p(1)*p(3)^6, p(1)^2*p(3)^6, ...
                p(1)^3*p(3)^6, p(1)^4*p(3)^6, p(2)*p(3)^6, p(1)*p(2)*p(3)^6, p(1)^2*p(2)*p(3)^6, p(1)^3*p(2)*p(3)^6, p(2)^2*p(3)^6, ...
                p(1)*p(2)^2*p(3)^6, p(1)^2*p(2)^2*p(3)^6, p(2)^3*p(3)^6, p(1)*p(2)^3*p(3)^6, p(2)^4*p(3)^6, p(3)^7, p(1)*p(3)^7, ...
                p(1)^2*p(3)^7, p(1)^3*p(3)^7, p(2)*p(3)^7, p(1)*p(2)*p(3)^7, p(1)^2*p(2)*p(3)^7, p(2)^2*p(3)^7, p(1)*p(2)^2*p(3)^7, ...
                p(2)^3*p(3)^7, p(3)^8, p(1)*p(3)^8, p(1)^2*p(3)^8, p(2)*p(3)^8, p(1)*p(2)*p(3)^8, p(2)^2*p(3)^8, p(3)^9, p(1)*p(3)^9, p(2)*p(3)^9, ...
                p(3)^10, 1]')';
end

for i = 1:size(ROIpositions,1)
    if ROIpositions(i,d) == slice
        p0 = ROIpositions(i,:);
        
        vector = f(p0); u = vector(1); v = vector(2); w = vector(3);
        vec = [u,v,w]/norm([u,v,w]); u = vec(1); v = vec(2); w = vec(3);
        quiver3(ROIpositions(i,1),ROIpositions(i,2),ROIpositions(i,3), u, v, w, value, 'g', 'MaxHeadSize', 0.5); 
        hold on;
    end
end
axis off;

end